#!/bin/bash

########################################################################
#   airtools [-h] <args>
#
#   a wrapper around airtools-gui.jar
#
########################################################################
VERSION="1.1"
VINFO="T. Lehmann, Nov. 2024"
PINFO="\
    options:
      h         show this help text
      l         prefer airtools-gui from users bin directory
      x         use experimental airtools-gui program version
      args      program arguments passed over to java program
"
CHANGELOG="
    1.1  - 30 Nov 2024
        * added libs to classpath

    1.0  - 17 Dec 2019
        * handle startup options for java and openjfx versions 9 and later
	    due to new modules system

    0.2  - 16 Mar 2019
        * added option -l to prefer java program from users bin directory
        * improved error checking and messages

    0.1  - 10 Nov 2018
        * initial version
"


#--------------------
#   user definitions
#--------------------
jar=airtools-gui.jar
mainclass=tl.airtoolsgui.AirtoolsGUI
datadir=/usr/share/airtools
libs=/usr/share/java/fits.jar


#--------------------
#   get options
#--------------------
cmdline="$(basename $0) $@"  # preserve command line
prefer_local_bin=""
experimental=""
testonly=""
showhelp=""
for i in $(seq 1 3)
do
    (test "$1" == "-h" || test "$1" == "--help") && showhelp=1 && shift 1
    test "$1" == "-l" && prefer_local_bin=1 && shift 1
    test "$1" == "-x" && experimental=1 && shift 1
    test "$1" == "-t" && testonly=1 && shift 1
done


#--------------------
#   checkings
#--------------------
test "$showhelp" &&
    echo $(basename $0)"   $VERSION   $VINFO" >&2 &&
    printf "$PINFO" >&2 &&
    exit -1

# find program jar file
prog=""
if [ "$experimental" ]
then
    prog=$HOME/prog/java/netbeans/airtools-gui/dist/$jar
fi
if [ -z "$prog" ] && [ "$prefer_local_bin" ]
then
    test -e $HOME/bin/$jar      && prog=$HOME/bin/$jar
    test -e $HOME/bin/home/$jar && prog=$HOME/bin/home/$jar
fi
test -z "$prog" && test -e "$datadir/$jar" && prog="$datadir/$jar"
if [ -z "$prog" ]
then
    msg="Unable to find $jar"
    type -p yad >/dev/null &&
        yad --title "Error" --window-icon=none --image=gtk-dialog-error --no-buttons \
            --text "\n  $msg" && exit 1
    type -p zenity >/dev/null &&
        zenity --error --text "\n  $msg" && exit 1
    notify-send -u critical -i gtk-dialog-error "$msg"
    exit 1
fi


#--------------------
#   start
#--------------------
javaprog=java
test "$JAVA_HOME" && javaprog=$JAVA_HOME/bin/java

jvers=$(java -XshowSettings:properties -version 2>&1 | tr -d ' ' | grep "^java.version=" | \
    cut -d '=' -f2)
jargs=""
test ${jvers/.*/} -gt 8 &&
    jargs="-p /usr/share/openjfx/lib --add-modules javafx.controls,javafx.fxml"

# start java program
if [ "$testonly" ]
then
    echo $javaprog $jargs -cp $prog:$libs $mainclass "$@"
else
    $javaprog $jargs -cp $prog:$libs $mainclass "$@"
fi
